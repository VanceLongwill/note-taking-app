{"version":3,"sources":["colors.js","noteReducer.js","components/NoteInput.js","components/NoteCard.js","components/AddButton.js","components/ColorPicker.js","components/EditModal.js","App.js","serviceWorker.js","index.js"],"names":["colors","name","value","id","uuid","actionTypes","CREATE_NOTE","UPDATE_NOTE","DELETE_NOTE","noteReducer","state","arguments","length","undefined","initialNoteState","action","type","concat","Object","toConsumableArray","title","text","date","Math","floor","Date","now","color","map","note","objectSpread","filter","NoteInput","_ref","props","esm_extends","react_default","a","createElement","className","assign","required","maxLength","NoteCard","onDelete","onEdit","objectWithoutProperties","style","borderLeftColor","onClick","fa","toLocaleTimeString","day","month","hour12","AddButton","ColorPicker","selected","onChange","_useState","useState","_useState2","slicedToArray","isExpanded","toggleDropdown","key","EditModal","onSave","onClose","inputText","setInputText","document","onkeydown","e","keyCode","stopPropagation","_ref2","target","App","_useState3","visible","_useState4","modalState","setModalState","_useState5","_useState6","userColor","setColor","_useReducer","useReducer","_useReducer2","notes","dispatch","handleDelete","handleModalOpen","htmlFor","placeholder","disabled","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cab66376.chunk.js","sourcesContent":["import uuid from 'uuid/v4';\n\nexport const colors = [\n  {\n    name: \"Red\",\n    value: \"#ed5068\",\n    id: uuid(),\n  },\n  {\n    name: \"Green\",\n    value: \"#aaf762\",\n    id: uuid(),\n  },\n  {\n    name: \"Blue\",\n    value: \"#2d6bfc\",\n    id: uuid(),\n  },\n  {\n    name: \"Turquoise\",\n    value: \"#2dfcee\",\n    id: uuid(),\n  },\n  {\n    name: \"Orange\",\n    value: \"#fcbe2d\",\n    id: uuid(),\n  },\n  {\n    name: \"Purple\",\n    value: \"#d62dfc\",\n    id: uuid(),\n  },\n];\n","import uuid from 'uuid/v4';\n\nimport { colors } from './colors';\n\nexport const actionTypes = {\n    CREATE_NOTE: \"CREATE_NOTE\",\n    UPDATE_NOTE: \"UPDATE_NOTE\",\n    DELETE_NOTE: \"DELETE_NOTE\",\n};\n\nexport function noteReducer(state = initialNoteState, action) {\n  const { CREATE_NOTE, UPDATE_NOTE, DELETE_NOTE } = actionTypes;\n  switch(action.type) {\n    case CREATE_NOTE:\n      return [\n        ...state,\n        { \n          title: `Note ${state.length + 1}`,\n          text: action.text,\n          id: uuid(),\n          date: Math.floor(Date.now() / 1000),\n          color: action.color,\n        }\n      ];\n    case UPDATE_NOTE:\n      return state.map(note => \n        note.id === action.id\n          ? {\n            ...note,\n            text: action.text,\n            date: Math.floor(Date.now() / 1000),\n          }\n          : note\n      );\n    case DELETE_NOTE:\n      return state.filter(note => note.id !== action.id);\n    default:\n      return state;\n  }\n}\n\nexport const initialNoteState = [\n  {\n    title: \"Note 1\",\n    text: \"this is an example note\",\n    id: uuid(),\n    date: Math.floor(Date.now() / 1000),\n    color: colors[0],\n  },\n  {\n    title: \"Note 2\",\n    text: \"this is another example note\",\n    id: uuid(),\n    date: Math.floor(Date.now() / 1000),\n    color: colors[1],\n  },\n  {\n    title: \"Note 3\",\n    text: \"this is a third example note\",\n    id: uuid(),\n    date: Math.floor(Date.now() / 1000),\n    color: colors[2],\n  },\n];\n","import React from 'react';\n\nexport function NoteInput({ ...props }) {\n  return (\n    <div className=\"NoteInput\">\n      <input required type=\"text\" maxLength=\"150\" {...props}/>\n    </div>\n  )\n}\n","import React from 'react';\n\nimport { FaTrash, FaPen } from 'react-icons/fa';\n\nfunction getFormattedDate(timestamp) {\n  const date = new Date(timestamp * 1000);\n  return date.toLocaleTimeString('en-US', { \n    day: 'numeric',\n    month: 'long',\n    hour12: true,\n  });\n}\n\nexport function NoteCard({ note, onDelete, onEdit, ...props }) {\n  const { id, title, text, color: { value: color }, date } = note;\n\n  return (\n    <div className=\"NoteCard\" style={{ borderLeftColor: color }}>\n      <div className=\"NoteCard-header\">\n        <span style={{ color }}>{title}</span>\n        <div className=\"NoteCard-header-icons\">\n          <button onClick={() => onDelete(id)}><FaTrash /></button>\n          <button onClick={() => onEdit(note)}><FaPen /></button>\n        </div>\n      </div>\n      <div className=\"NoteCard-body\">\n        <p>{text}</p>\n      </div>\n      <div className=\"NoteCard-footer\">\n        <span>{getFormattedDate(date)}</span>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\n\n\nexport function AddButton({ ...props }) {\n  return <button className=\"AddButton\" type=\"submit\" {...props}>{props.text}</button>\n}\n","import React, { useState } from 'react';\nimport { FaCaretUp, FaCaretDown } from 'react-icons/fa';\n\nexport function ColorPicker({ selected, colors, onChange, ...props }) {\n  const [isExpanded, toggleDropdown] = useState(false);\n  return (\n    <div className=\"ColorPicker\" onClick={() => toggleDropdown(!isExpanded)} {...props}>\n      {isExpanded \n        ? colors.map(color => \n          <div className=\"ColorPicker-option\" onClick={() => onChange(color)} key={color.id} value={color}>\n            {color.name}\n          </div>)\n        : <span>{selected}</span>\n      }\n      {isExpanded\n          ? <FaCaretUp />\n          : <FaCaretDown />\n      }\n    </div>\n  )\n}\n","import React, { useState } from 'react';\n\nimport { FaRegWindowClose } from 'react-icons/fa';\n\nimport { NoteInput } from './NoteInput';\nimport { AddButton } from './AddButton';\n\nexport function EditModal({ note, onSave, onClose, ...props }) {\n  const [inputText, setInputText] = useState(note.text);\n\n  document.onkeydown = function(e) {\n    if (e.keyCode === 27) {\n      onClose();\n    }\n  };\n\n  return (\n    <div className=\"EditModal\" onClick={onClose}>\n      <div className=\"EditModal-content\" onClick={e => e.stopPropagation()}>\n        <button type=\"button\" className=\"EditModal-close\" name=\"closeModal\" onClick={onClose}><FaRegWindowClose /></button>\n        <span><b>Editing: </b>{note.title}</span>\n        <NoteInput \n          value={inputText}\n          id=\"modalNoteInput\"\n          name=\"modalNoteInput\"\n          onChange={({ target: { value } }) => setInputText(value)} />\n        <div>\n          <AddButton\n            text=\"Save changes\"\n            onClick={() => { \n              onSave(note.id, inputText);\n              onClose();\n            }} />\n          <AddButton\n            text=\"Close\"\n            onClick={onClose} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useReducer } from 'react';\n\nimport { noteReducer, actionTypes, initialNoteState } from './noteReducer';\nimport { colors } from './colors';\n\nimport { NoteInput } from './components/NoteInput';\nimport { NoteCard } from './components/NoteCard';\nimport { AddButton } from './components/AddButton';\nimport { ColorPicker } from './components/ColorPicker';\nimport { EditModal } from './components/EditModal';\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [modalState, setModalState] = useState({ visible: false, note: null });\n  const [userColor, setColor] = useState(colors[0]);\n  const [notes, dispatch] = useReducer(noteReducer, initialNoteState);\n\n  const { CREATE_NOTE, UPDATE_NOTE, DELETE_NOTE } = actionTypes;\n  function handleAdd() {\n    dispatch({ type: CREATE_NOTE, text: inputText, color: userColor });\n    setInputText(\"\");\n  }\n\n  function handleDelete(id) {\n    dispatch({ type: DELETE_NOTE, id });\n  }\n\n  function handleUpdate(id, text) {\n    dispatch({ type: UPDATE_NOTE, id, text });\n  }\n\n  function handleModalOpen(note) {\n    setModalState({ visible: true, note });\n  }\n\n  function handleModalClose() {\n    setModalState({ visible: false, note: null });\n  }\n\n  return (\n    <div className=\"App\">\n      {modalState.visible &&\n          <EditModal \n            onClose={handleModalClose}\n            onSave={handleUpdate}\n            note={modalState.note} />}\n      <form className=\"InputContainer\">\n        <label htmlFor=\"noteInput\">Note text</label>\n        <NoteInput \n          value={inputText}\n          id=\"noteInput\"\n          name=\"noteInput\"\n          onChange={({ target: { value } }) => setInputText(value)}\n          placeholder=\"Enter a new note\" />\n        <label htmlFor=\"colorPicker\">Note Color</label>\n        <ColorPicker\n          selected={userColor.name} \n          id=\"colorPicker\"\n          colors={colors} \n          onChange={setColor} />\n        <AddButton disabled={!inputText.length} text=\"Add note\" onClick={handleAdd} />\n      </form>\n      <div className=\"NoteContainer\">\n        {notes.map(note =>\n          <NoteCard \n            note={note}\n            onDelete={handleDelete}\n            onEdit={handleModalOpen}\n            key={note.id} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}